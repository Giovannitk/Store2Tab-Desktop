<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Style esistente per ComboBox 
    <Style TargetType="ComboBox" x:Key="ModernComboBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="MinWidth" Value="120"/>
    </Style> -->

    <!-- NUOVI STILI PER IL LOADING -->
    <!-- Animazione di rotazione -->
    <Storyboard x:Key="SpinAnimation" RepeatBehavior="Forever">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                   From="0" To="360" Duration="0:0:1.5" />
    </Storyboard>

    <!-- Style per l'icona loading animata -->
    <Style x:Key="SpinningStyle" TargetType="TextBlock">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="SpinStoryboard">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimation
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0" To="360" Duration="0:0:1.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Style per il loading overlay -->
    <Style x:Key="LoadingOverlayStyle" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#CC000000" Offset="0"/>
                    <GradientStop Color="#AA111111" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="Padding" Value="40,30" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="5" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style per il testo del loading -->
    <Style x:Key="LoadingTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Orange"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,15,0,5"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="3" ShadowDepth="1" Opacity="0.7"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style per il sottotitolo del loading -->
    <Style x:Key="LoadingSubTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Opacity" Value="0.8"/>
    </Style>

    <!-- Stile pulsanti principali -->
    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF0E639C"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF007ACC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF1177BB"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF0E5A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#FF3E3E42"/>
                            <Setter Property="Foreground" Value="#FF999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per TextBox -->
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="#FF3F3F46"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF606066"/>
        <!-- Bordo più chiaro per maggiore contrasto -->
        <Setter Property="BorderThickness" Value="2"/>
        <!-- Spessore aumentato -->
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" BlurRadius="3" Opacity="0.3" Color="#FF606060"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#FF007ACC"/>
                <Setter Property="BorderThickness" Value="2"/>
                <!-- Viene mantenuto lo spessore anche quando in focus -->
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#FF88888C"/>
                <!-- Effetto hover per migliore feedback -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Stile per ComboBox -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="#FF3F3F46"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF434346"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontSize" Value="11"/>
    </Style>

    <!-- Stile per DatePicker -->
    <Style x:Key="ModernDatePicker" TargetType="DatePicker">
        <Setter Property="Background" Value="#FF3F3F46"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF434346"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontSize" Value="11"/>
    </Style>

    <!-- Stile per Label -->
    <Style x:Key="ModernLabel" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
    </Style>

    <!-- Stile per headers -->
    <Style x:Key="HeaderStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFF9500"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
    </Style>

    <!-- Stile per GroupBox -->
    <Style x:Key="ModernGroupBox" TargetType="GroupBox">
        <Setter Property="Foreground" Value="#FFFF9500"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderBrush" Value="#FF434346"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" 
                        Background="#FF2D2D30" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1,1,1,0"
                        CornerRadius="3,3,0,0"
                        Padding="8,4">
                            <ContentPresenter ContentSource="Header" 
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"/>
                        </Border>
                        <Border Grid.Row="1" 
                        Background="#FF3F3F46" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1,0,1,1"
                        CornerRadius="0,0,3,3"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per Button (ModernButton) -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="#FF0E639C"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF007ACC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF1177BB"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF0E5A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#FF3E3E42"/>
                            <Setter Property="Foreground" Value="#FF999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per RadioButton -->
    <Style x:Key="ModernRadioButton" TargetType="RadioButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Ellipse x:Name="OuterEllipse" Grid.Column="0" 
                        Width="12" Height="12" 
                        Stroke="#FF434346" 
                        StrokeThickness="1"
                        Fill="#FF3F3F46"
                        Margin="0,0,6,0"/>
                        <Ellipse x:Name="InnerEllipse" Grid.Column="0" 
                        Width="6" Height="6" 
                        Fill="#FF007ACC"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Visibility="Collapsed"/>
                        <ContentPresenter Grid.Column="1" 
                                VerticalAlignment="Center"
                                TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="InnerEllipse" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="#FF007ACC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per CheckBox -->
    <Style x:Key="ModernCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="OuterRect" Grid.Column="0" 
                          Width="12" Height="12" 
                          Stroke="#FF434346" 
                          StrokeThickness="1"
                          Fill="#FF3F3F46"
                          Margin="0,0,6,0"/>
                        <Path x:Name="CheckMark" Grid.Column="0" 
                      Width="8" Height="8" 
                      Fill="#FF007ACC"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Data="M 0 3 L 3 6 L 8 1"/>
                        <ContentPresenter Grid.Column="1" 
                                VerticalAlignment="Center"
                                TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterRect" Property="Stroke" Value="#FF007ACC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>